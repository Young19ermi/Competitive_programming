def exclusive_prefix_sum(nums):
    prefix_sum = [0] * len(nums)
    for i in range(1, len(nums)):
        prefix_sum[i] = prefix_sum[i-1] + nums[i-1]
    return prefix_sum

def inclusive_prefix_sum(nums):
    prefix_sum = [0] * (len(nums) + 1)
    for i in range(1, len(nums)+1):
        prefix_sum[i] = prefix_sum[i-1] + nums[i-1]
    return prefix_sum
#For example, if nums = [1, 2, 3, 4], the exclusive prefix sum would be [0, 1, 3, 6],
but the inclusive prefix sum would be [0, 1, 3, 6, 10]. By initializing the prefix_sum 
list with an extra zero at the beginning, we can easily calculate the inclusive prefix 
sum without having to handle a special case for the last element.
